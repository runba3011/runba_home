<%= stylesheet_link_tag "groups/messages" , :media => "all" %>
<script>
  function hideImageShow(obj){
    search_id = `image_show_${obj.id}`;
    show_object = document.getElementById(search_id);
    console.log(search_id);
    console.log(show_object);
    show_object.classList.add('hidden');
  };

  function showBigImage(obj){
    search_id = `image_show_${obj.id}`;
    show_object = document.getElementById(search_id);
    console.log(search_id);
    console.log(show_object);
    show_object.classList.remove('hidden');
  }

  function adjustWidthAndHeight(obj){
    showImage = document.getElementById(`image_show_image_${obj.id}`)
    showImage.removeAttribute('width');
    showImage.removeAttribute('height');

    // 戻るボタンの高さは50px
    // 戻るボタンの上の余白は10px
    // 画像プレビューエリアのwidthは親✖️0.95
    screenWidth = window.innerWidth;
    screenHeight = window.innerHeight;

    maxWidth = screenWidth * 0.95;
    maxHeight = screenHeight - (50 + 10);

    const ImageWidth = obj.offsetWidth;
    const ImageHeight = obj.offsetHeight;

    // デフォルトではwidthいっぱいに広げる、heightが飛び出るならheightいっぱいに広げる、逆にwidthから飛び出るようになるなら縦横同じにする
    let nowImageWidth = maxWidth;
    let nowImageHeight = maxWidth * (ImageHeight / ImageWidth);

    if(nowImageHeight < maxHeight){
      console.log("高さに余裕があるので横幅いっぱいに広げる");
      showImage.setAttribute('style' , `width: ${maxWidth}px;height:auto;`);
    }
    else{
      console.log("高さに余裕がありません")
      nowImageHeight = maxHeight;
      nowImageWidth = maxHeight * (ImageWidth / ImageHeight);
      if(nowImageWidth < maxWidth){
        console.log("横幅に余裕があるので縦幅いっぱいに広げる")
        showImage.setAttribute('style' , `height: ${maxHeight}px; width: auto;`);
      }
      else{
        console.log("画像が正方形なので縦横いっぱいに広げる")
        showImage.setAttribute('style' , `height: ${maxHeight}px; width: auto;`);
      }
    }
  }
</script>

  <% group.messages.each do |message| %>
    <div class = "_messages_single_message hide_scroll_bar" id = "single_message_box_<%= message.id %>">
      <div class = "_messages_message_information">
        <%= link_to user_path(message.user) , class: "_messages_user_information" do %>
          <% if message.user.icon_image.attached? %>
            <%= image_tag message.user.icon_image.variant(resize: '500x500') , class: "_message_user_icons" %>
          <% else %>
            <%= image_tag "defaults/user_icon_image.png" , class: "_message_user_icons" %>
          <% end %>
          <%= message.user.nickname %>
        <% end %>
        <p class = "_messages_created_at"><%= message.created_at %></p>
        <% if message.user == @user && message.text != nil %>
          <%= link_to "削除" , group_message_path(group , message) , method: :delete , class: "_messages_message_delete" , remote: true , id: "destroy_button_#{message.id}" %>
        <% end %>
      </div>

      <% if message.text != nil %>
        <div id = "message_content_<%= message.id %>">
          <p class ="_message_text"><%= h(message.text).gsub(/\n|\r\n/, "<br>").html_safe %></p>
          <% if message.image.attached? %>
            <div class = "_message_images_box">
            <%= image_tag message.image , class: "_message_images" , onClick: "showBigImage(this) , adjustWidthAndHeight(this)" , id: message.id %>
            <div class = "image_black"></div>
            </div>

            <div class = "image_show_background hidden" id = "image_show_<%= message.id %>">
              <div class = "image_show_center_object">
                <%= image_tag "back_button.png" , class: "image_show_back_button" , id: "#{message.id}" , onClick: "hideImageShow(this)" %>
                <%= image_tag message.image , class: "image_show_image" , id: "image_show_image_#{message.id}" %>
              </div>
            </div>
          <% end %>
        </div>
      <% else %>
        <p>メッセージは削除されました</p>
      <% end %>
    </div>
    <div class = "_messages_only_border only_border"></div>
  <% end %>